#!/bin/sh 
myerr() {
    echo "$*" >&2
    exit 1
}
kill_startup() {
    for i in $(ps auxww|grep python |fgrep startup.py |fgrep -v "${SU}" | \
	fgrep -v fgrep | awk  '{print $2}')
    do
	echo " kill $* $i"
        ${SU} ${USER} -c "kill $* $i"
    done
    echo "done."
}

kill_rest() {
    for i in $(ps auxww|grep python |egrep 'abusehelper\.core|sanitizer.py'|fgrep -v "${SU}" | \
	fgrep -v fgrep | awk  '{print $2}')
    do
	echo " kill $* $i"
        ${SU} ${USER} -c "kill $* $i"
    done
}

PYTHON="python"
UNAME=$(uname)

USER="abusehel"
USECASEDIR="/var/lib/ah2/production"
LOG="${USECASEDIR}/log/abusehelper.log"




case "${UNAME}" in
    "Darwin")
	SU="su -"
	;;
    "OpenBSD")
        [ ! -f "/usr/local/bin/python2.5" ] && myerror "python2.5 not found"
        SU="su -" 
        PYTHON="python2.5" 
       
	USER="_abusehe"
	;;
    *)
	SU="su -s /bin/sh"
	;;
esac

STARTCMD="${PYTHON} -m abusehelper.core.startup" 

# Default, ${STARTCMD} = ${STOPCMD}. OpenBSD behaves slightly differently.
[ -z "${STOPCMD}" ] && STOPCMD="${STARTCMD}" 

case "$1" in
    start)
        ${SU} ${USER} -c "(cd ${USECASEDIR}; ${STARTCMD} ./startup.py >${LOG} 2>&1)" &
	echo "AbuseHelper started."
	echo "Run \"tail -f ${LOG}\" to see AbuseHelper's status."
	;;

    stop)
	echo "Killing startup..."
	kill_startup
	sleep 1
	echo "Done."
	echo "Killing the remaining processes..."
	kill_rest
	kill_rest -9
	echo 'Done.'
	;;

    restart)
	$0 stop
	sleep 3
	$0 start
	;;
    status)
	echo -e 'Below is a list of currently running AbuseHelper processes:\n'
	ps auxww|egrep 'abusehelper|sanitizer.py'|fgrep "${PYTHON}" | \
            fgrep -v "${SU}"|fgrep -v fgrep | \
	    fgrep -v 'sh -c' | tr -s " "  
	;;

    *)
	myerr "Usage: $0 <start|stop|status>"
esac
