#!/bin/sh 
myerr() {
 echo "$*" >&2
 exit 1
}

create_logdir() {
  #doublecheck
  [ $(basename ${LOGDIR}) = "abusehelper" ] || \
      myerr "Logdir needs to end 'abusehelper' subdir."

  mkdir ${LOGDIR} || myerr "Could not create logdir."
  echo "Created ${LOGDIR}..."

  chown ${USER} ${LOGDIR} || myerr "Could not chown to ${USER}"
  echo "chowned to ${USER}..."
  
  chmod 700 ${LOGDIR}

}

PYTHON="python"
UNAME=$(uname)


INSTALLROOT=""

LOGDIR="${INSTALLROOT}/var/log/abusehelper"
LOG="${LOGDIR}/abusehelper.log"

USER="abusehel"

CFG="/etc/abusehelper/config.ini"
AHCMD="${PYTHON} -m abusehelper.core.startup" 
STARTCMD="${AHCMD} ${CFG}"

# Default, ${STARTCMD} = ${STOPCMD}. OpenBSD behaves slightly differently.
STOPCMD="${STARTCMD}" 

case "${UNAME}" in
    "Darwin")
	SU="su -"
	;;
    "OpenBSD")
        [ ! -f "/usr/local/bin/python2.5" ] && myerror "python2.5 not found"
        SU="su -" 
        PYTHON="python2.5" 
        STOPCMD="${PYTHON} -u -m -c $CFG"
	;;
    *)
	SU="su"
	;;
esac
case "$1" in
    start)

	[ $(basename ${LOGDIR}) = "abusehelper" ] || \
            myerr "Logdir needs to end 'abusehelper' subdir."

	[ -d ${LOGDIR} ] || create_logdir

        ${SU} ${USER} -c "${STARTCMD} >${LOG} 2>&1" &
	;;

    stop)
	for i in $(ps auxww|fgrep "${STOPCMD}"|fgrep -v "${SU}" | \
	    fgrep -v fgrep |fgrep -v bas | awk  '{print $2}')
	do
	    echo "kill $i"
            ${SU} ${USER} -c "kill $i"
	done
	;;

    restart)
	$0 stop
	sleep 3
	$0 start
	;;
    status)
	ps auxww|fgrep 'abusehelper'|fgrep "${PYTHON}" | \
            fgrep -v "${SU}"|fgrep -v fgrep | \
	    fgrep -v 'sh -c' | tr -s " "  
	;;
    *)
	myerr "Usage: $0 <start|stop|status>"
esac
